{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.badgesSection" . }}

{{ template "chart.description" . }}

{{ template "chart.sourcesSection" . }}

## Prerequisites

* Kubernetes 1.12+
* Helm 3.1.x
* Persistent Volume (PV) provisioning support (Required if deploying the [postgresql chart](https://artifacthub.io/packages/helm/bitnami/postgresql))

## Installing the Chart

### Add the Nautobot Helm Repo

```no-highlight
$ helm repo add nautobot https://nautobot.github.io/helm-charts/
```

### Install the Nautobot Chart from the Nautobot repo

To install the chart with the release name `nautobot` (NOTE: the release name is a label completely up to the user) DB and Redis passwords are required:

```no-highlight
$ helm install nautobot nautobot/nautobot --set postgresql.postgresqlPassword="change-me" --set redis.auth.password="change-me"
```

This command deploys Nautobot, on the Kubernetes cluster, in the default configuration. The [Values](#values) section lists the parameters that can be customized during installation.

> **Tip**: List all releases using `helm list`

## Accessing Nautobot

Immediately after install Helm will present the user with help text similar to the following:

```no-highlight
*********************************************************************
*** PLEASE BE PATIENT: Nautobot may take a few minutes to install ***
*********************************************************************

1. Get the Nautobot URL:

  echo "Nautobot URL: http://127.0.0.1:8080/"
  kubectl port-forward --namespace default svc/nautobot 8080:80

2. Get your Nautobot login admin credentials by running:

  echo Username: admin
  echo Password: $(kubectl get secret --namespace default nautobot-env -o jsonpath="{.data.NAUTOBOT_SUPERUSER_PASSWORD}" | base64 --decode)
  echo api-token: $(kubectl get secret --namespace default nautobot-env -o jsonpath="{.data.NAUTOBOT_SUPERUSER_API_TOKEN}" | base64 --decode)
```

This message should include basic information about connecting to Nautobot as well as accessing the superuser credentials if they were created.  Nautobot can take several minutes to deploy,
you will need to wait until that is complete before accessing Nautobot.

After several minutes, by default, a Nautobot super user will be created and you will be able to log in to Nautobot.  The default username is `admin` and the default password
was randomly generated by helm, you can find the password by running the following command:

```no-highlight
$ kubectl get secret nautobot-env -o jsonpath="{.data.NAUTOBOT_SUPERUSER_PASSWORD}" | base64 --decode
```

## Configure Nautobot

When [deploying a helm chart](https://helm.sh/docs/intro/using_helm/) there are several different methods to apply alternate configuration values.  One option is via the command line using the
`--set` argument, however, changing multiple variables becomes tedious, a better approach to changing multiple values is to create a YAML file and add the `--values custom_values.yaml` argument.
The following examples/recommendations demonstrate the usage of a custom YAML file to apply these values.  All of the available options are documented in the [values](#values) section, however,
the Nautobot application-specific values are summarized in the [Nautobot Application Values](#nautobot-application-values) section below.

### Required Settings

The following settings are the bare minimum required values to to deploy this chart:

```yaml
postgres:
  postgresqlPassword: "change-me"
redis:
  auth:
    password: "change-me"
```

This will deploy a PostgreSQL database and a Redis instance for Nautobot in the same namespace.

### External Database

To utilize an external database the following values are available for configuration:

```yaml
nautobot:
  db:
    engine: "django.db.backends.postgresql"
    host: "db.example.com"
    name: "nautobot_db_name"
    password: "nautobot_db_user_password"
    port: 5432
    timeout: 300
    user: "nautobot_db_username"
postgres:
  enabled: false
```

### External Redis

To utilize an external redis deployment the following values are available for configuration:

```yaml
nautobot:
  redis:
    host: "redis.example.com"
    password: "nautobot_redis_user_password"
    port: 6379
    ssl: true
    username: "nautobot_redis_username"
redis:
  enabled: false
```

### RQ Workers

In Nautobot 1.1.0 the [RQ worker was deprecated](https://nautobot.readthedocs.io/en/stable/release-notes/version-1.1/#background-tasks-now-use-celery-223) by the Celery worker, there are some use cases where the RQ worker may still be necessary.  To enable it:

```yaml
rqWorker:
  enabled: true
```

### Ingress

TODO: Ingress Example

### Custom `nautobot_config.py`

To replace the entire `nautobot_config.py` configuration file with a custom file use the `nautobot.config` value.  For example, if your custom `nautobot_config.py` file is located at `./path/to/nautobot_config.py` with other helm values in `./my_values.yaml` you can install the chart using:

```no-highlight
$ helm install nautobot nautobot/nautobot -f ./my_values.yaml --set-file nautobot.config=./path/to/nautobot_config.py
```

### Custom `uwsgi.ini`

To replace the entire `uwsgi.ini` file with a custom file use the `nautobot.uWSGIini` value.  For example, if your custom `uwsgi.ini` file is located at `./path/to/uwsgi.ini` with other helm values in `./my_values.yaml` you can install the chart using:

```no-highlight
$ helm install nautobot nautobot/nautobot -f ./my_values.yaml --set-file nautobot.uWSGIini=./path/to/uwsgi.ini
```

### Recommended Production Values

When deploying this chart in production, it is recommended to set or at least be aware of the following values:

```yaml
nautobot:
  replicaCount: 2  # In production this should be >= 2
  metrics: true
  secretKey: ""  # In a production system this value should be recorded and used when restoring the DB if necessary
  superUser:
    enabled: false  # In production a superuser should be created manually
  extraVars:
    - name: "NAUTOBOT_BANNER_TOP"
      value: "Production"
postgres:
  enabled: true  # Consider utilizing an external HA database rather than the built-in database
  postgresqlPassword: "change-me"
redis:
  enabled: true  # Consider utilizing an external HA redis rather than the built-in redis
  auth:
    password: "change-me"
```

### Nautobot Application Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| nautobot.allowedHosts | string | `"*"` | [ref](https://nautobot.readthedocs.io/en/stable/configuration/required-settings/#allowed_hosts) Space seperated list of Nautobot allowed hosts (NAUTOBOT_ALLOWED_HOSTS) |
| nautobot.config | string | `""` | [ref](https://nautobot.readthedocs.io/en/stable/configuration/) Replace the entire `nautobot_config.py` file with this value |
| nautobot.db.engine | string | `"django.db.backends.postgresql"` | [ref](https://nautobot.readthedocs.io/en/stable/configuration/required-settings/#databases) Nautobot database engine, valid values: `django.db.backends.postgresql` and `django.db.backends.mysql` (NAUTOBOT_DB_ENGINE) |
| nautobot.db.host | string | `"postgres"` | [ref](https://nautobot.readthedocs.io/en/stable/configuration/required-settings/#databases) Nautobot external database hostname, ignored if `postgresql.enabled` is `true` (NAUTOBOT_DB_HOST) |
| nautobot.db.name | string | `"nautobot"` | [ref](https://nautobot.readthedocs.io/en/stable/configuration/required-settings/#databases) Nautobot external database name, ignored if `postgresql.enabled` is `true` (NAUTOBOT_DB_NAME) |
| nautobot.db.password | string | `""` | [ref](https://nautobot.readthedocs.io/en/stable/configuration/required-settings/#databases) Nautobot external database password, ignored if `postgresql.enabled` is `true` (NAUTOBOT_DB_PASSWORD) |
| nautobot.db.port | int | `5432` | [ref](https://nautobot.readthedocs.io/en/stable/configuration/required-settings/#databases) Nautobot external database port, ignored if `postgresql.enabled` is `true` (NAUTOBOT_DB_PORT) |
| nautobot.db.timeout | int | `300` | [ref](https://nautobot.readthedocs.io/en/stable/configuration/required-settings/#databases) Nautobot database timeout (NAUTOBOT_DB_TIMEOUT) |
| nautobot.db.user | string | `"nautobot"` | [ref](https://nautobot.readthedocs.io/en/stable/configuration/required-settings/#databases) Nautobot external database username, ignored if `postgresql.enabled` is `true` (NAUTOBOT_DB_USER) |
| nautobot.debug | bool | `false` | [ref](https://nautobot.readthedocs.io/en/stable/configuration/optional-settings/#debug) Enable Nautobot Debug (NAUTOBOT_DEBUG) |
| nautobot.extraVars | list | `[]` | An array of envirnoment variable objects (`name` and `value` are required) to add to ALL Nautobot related deployments (i.e. `celeryWorker` and `rqWorker`) |
| nautobot.logLevel | string | `"INFO"` | Log Level used for Celery logging, valid values: `CRITICAL`, `ERROR`, `WARNING`, `INFO`, `DEBUG` |
| nautobot.metrics | bool | `true` | [ref](https://nautobot.readthedocs.io/en/stable/configuration/optional-settings/#metrics_enabled) Enable Prometheus metrics endpoint (NAUTOBOT_METRICS_ENABLED) |
| nautobot.redis.host | string | `""` | [ref](https://nautobot.readthedocs.io/en/stable/configuration/required-settings/#rq_queues) Nautobot external redis hostname, ignored if `redis.enabled` is `true` (NAUTOBOT_REDIS_HOST) |
| nautobot.redis.password | string | `""` | [ref](https://nautobot.readthedocs.io/en/stable/configuration/required-settings/#rq_queues) Nautobot external redis password, ignored if `redis.enabled` is `true` (NAUTOBOT_REDIS_PASSWORD) |
| nautobot.redis.port | int | `6379` | [ref](https://nautobot.readthedocs.io/en/stable/configuration/required-settings/#rq_queues) Nautobot external redis port, ignored if `redis.enabled` is `true` (NAUTOBOT_REDIS_PORT) |
| nautobot.redis.ssl | bool | `false` | [ref](https://nautobot.readthedocs.io/en/stable/configuration/required-settings/#rq_queues) Nautobot external redis ssl enabled, ignored if `redis.enabled` is `true` (NAUTOBOT_REDIS_SSL) |
| nautobot.redis.username | string | `""` | [ref](https://nautobot.readthedocs.io/en/stable/configuration/required-settings/#rq_queues) Nautobot external redis username, ignored if `redis.enabled` is `true` (NAUTOBOT_REDIS_USERNAME) |
| nautobot.secretKey | string | `""` | [ref](https://nautobot.readthedocs.io/en/stable/configuration/required-settings/#secret_key) Nautobot Secret Key (NAUTOBOT_SECRET_KEY) |
| nautobot.superUser.apitoken | string | `""` | [ref](https://nautobot.readthedocs.io/en/stable/docker/#nautobot_superuser_api_token) Configure an API key for the super user if `nautobot.superUser.enabled` is `true` (NAUTOBOT_SUPERUSER_API_TOKEN) |
| nautobot.superUser.email | string | `"admin@example.com"` | [ref](https://nautobot.readthedocs.io/en/stable/docker/#nautobot_superuser_email) Configure an email address for the super user if `nautobot.superUser.enabled` is `true` (NAUTOBOT_SUPERUSER_EMAIL) |
| nautobot.superUser.enabled | bool | `true` | [ref](https://nautobot.readthedocs.io/en/stable/docker/#nautobot_create_superuser) Create a new super user account in Nautobot once deployed (NAUTOBOT_CREATE_SUPERUSER) |
| nautobot.superUser.password | string | `""` | [ref](https://nautobot.readthedocs.io/en/stable/docker/#nautobot_superuser_password) Password to use for the super user to be created if `nautobot.superUser.enabled` is `true` (NAUTOBOT_SUPERUSER_NAME), if unset a random password will be generated |
| nautobot.superUser.username | string | `"admin"` | [ref](https://nautobot.readthedocs.io/en/stable/docker/#nautobot_superuser_name) User name to use for the super user to be created if `nautobot.superUser.enabled` is `true` (NAUTOBOT_SUPERUSER_NAME) |
| nautobot.uWSGIini | string | `""` | [ref](https://uwsgi-docs.readthedocs.io/en/latest/Configuration.html) Replace the entire `uwsgi.ini` file with this value |

## Configuring PostgreSQL

The Nautobot helm chart uses the [Bitnami PostgreSQL chart](https://github.com/bitnami/charts/tree/master/bitnami/postgresql) as a [subchart](https://helm.sh/docs/chart_template_guide/subcharts_and_globals/).  To configure PostgreSQL use
the `postgresql` key, any `postgresql.*` values are passed directly to that chart.

## Configuring Redis

The Nautobot helm chart uses the [Bitnami Redis chart](https://github.com/bitnami/charts/tree/master/bitnami/redis) as a [subchart](https://helm.sh/docs/chart_template_guide/subcharts_and_globals/).  To configure PostgreSQL use
the `redis` key, any `redis.*` values are passed directly to that chart.

## Uninstalling the Chart

To uninstall/delete the `nautobot` deployment:

```no-highlight
$ helm delete nautobot
```

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}
