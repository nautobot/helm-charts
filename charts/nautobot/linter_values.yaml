---
nautobot:
  pdb:
    create: true
  extraVars:
    - name: "SOME_VARIABLE"
      value: "some value"
  extraVolumeMounts:
    - name: "gmail-auth"
      mountPath: "/opt/nautobot/circuit-maintenance-secrets"
      readOnly: true
  extraVolumes:
    - name: "gmail-auth"
      secret:
        secretName: "nautobot-gmail-auth"
  nginx:
    enabled: true
  nodeSelector:
    kubernetes.io/arch: "amd64"

nautobots:
  # Enable a separate deployment specifically for GraphQL requests
  graphql:
    enabled: true
    initNautobot: false
    ingressPaths:
      - "/api/graphql"
      - "/graphql"
    autoscaling:
      enabled: true

  # Enable a separate deployment specifically for API requests
  api:
    enabled: true
    ingressPaths:
      - "/api"
    initNautobot: false
    replicaCount: 3
    autoscaling:
      enabled: false

  default:
    initNautobot: false  # Will be handled by the docs container

  static:
    enabled: true
    ingressPaths:
      - "/static"
    initNautobot: true
    staticFilesOnly: true

workers:
  beat:
    extraVolumeMounts:
      - name: "gmail-auth"
        mountPath: "/opt/nautobot/circuit-maintenance-secrets"
        readOnly: true
    extraVolumes:
      - name: "gmail-auth"
        secret:
          secretName: "nautobot-gmail-auth"
  flower:
    enabled: true
    command:
      - "nautobot-server"
      - "celery"
      - "flower"
    livenessProbe:
      enabled: false
    metricsPort: 5555
    readinessProbe:
      httpGet:
        path: "/healthcheck"
        port: "http"
      initialDelaySeconds: 30
      failureThreshold: 3
      timeoutSeconds: 5
      periodSeconds: 10
    replicaCount: 1
    resources:
      requests:
        cpu: "50m"
        memory: "200Mi"
      limits:
        cpu: "1"
        memory: "1Gi"

celery:
  autoscaling:
    enabled: true
  extraVolumeMounts:
    - name: "gmail-auth"
      mountPath: "/opt/nautobot/circuit-maintenance-secrets"
      readOnly: true
  extraVolumes:
    - name: "gmail-auth"
      secret:
        secretName: "nautobot-gmail-auth"
  nodeSelector:
    kubernetes.io/arch: "amd64"
  pdb:
    create: true

ingress:
  enabled: true
  ingressClassName: "nginx"
  path: "/*"
  extraHosts:
    - hostname: "nautobot2.local"
      path: "/"
      pathType: "Prefix"
      extraPaths: []
      backendProtocol: "https"
  tls: true

metrics:
  enabled: true
  capacityMetrics:
    enabled: true
  nginxExporter:
    enabled: true
  uwsgiExporter:
    enabled: true
  prometheusRule:
    enabled: true
  serviceMonitor:
    enabled: true

commonAnnotations:
  annotate_everything: "everywhere"
serviceAccount:
  annotations:
    service_account_annotation: "only_the_sa"
