{{- if .Values.networkPolicy.enabled }}
apiVersion: {{ include "common.capabilities.networkPolicy.apiVersion" . }}
kind: NetworkPolicy
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.nautobot.podLabels .Values.commonLabels ) "context" . ) }}
  podSelector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
  policyTypes:
    - Ingress
    - Egress
  {{- if .Values.networkPolicy.allowAllEgress }}
  egress:
    - {}
  {{- else }}
  egress:
    # Allow DNS resolution
    - ports:
        - port: 53
          protocol: UDP
        - port: 53
          protocol: TCP
    # Allow connectivity to backend services (DB, redis, etc)
    {{- if or .Values.postgresql.enabled .Values.postgresqlha.enabled }}
        - port: 5432
    {{- else }}
        - port: {{ .Values.nautobot.db.port }}
    {{- end }}
          protocol: TCP
    {{- if .Values.redis.enabled }}
        - port: 6379
    {{- else }}
        - port: {{ .Values.nautobot.redis.port }}
    {{- end }}
          protocol: TCP
    {{- if .Values.networkPolicy.extraEgress }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.networkPolicy.extraEgress "context" $ ) | nindent 4 }}
    {{- end }}
  {{- end }}
  ingress:
    {{- if .Values.networkPolicy.allowExternalIngress}}
    # Allow connectivity from everyone (including outside the cluster) into the Web application
    - ports:
        - port: 8443
          protocol: TCP
        - port: 8080
          protocol: TCP
      from:
        - ipBlock:
            cidr: 0.0.0.0/0
    {{- end }}
    # Allow connectivity from the client pods into the Web application
    - ports:
        - port: 8443
          protocol: TCP
        - port: 8080
          protocol: TCP
      from:
        - podSelector:
            matchLabels:
              {{ template "common.names.fullname" . }}-client: "true"
        - podSelector:
            matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 14 }}
    # TODO: add more ingress rules
    # Rule for metrics `if .Values.metrics.enabled`
    {{- if .Values.networkPolicy.extraIngress }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.networkPolicy.extraIngress "context" $ ) | nindent 4 }}
    {{- end }}
{{- end }}
